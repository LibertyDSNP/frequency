# Global lint rules. This will keep rust analyser in sync with the clippy
# lints so every tool has the same view.
#
# Rustc Lints: https://doc.rust-lang.org/rustc/lints/index.html
# Clippy Lints: https://rust-lang.github.io/rust-clippy/master/index.html
# Substrate flags: https://github.com/paritytech/substrate/blob/master/.cargo/config.toml
#
# If you want standard clippy run:
# RUSTFLAGS= cargo clippy
[target.'cfg(feature = "cargo-clippy")']
rustflags = [
  "-Aclippy::all",
  "-Dclippy::complexity",
  "-Dclippy::correctness",
  "-Aclippy::if_same_then_else",
  "-Aclippy::clone_double_ref",
  "-Aclippy::zero_prefixed_literal",
  "-Aclippy::type_complexity",
  "-Aclippy::nonminimal_bool",
  "-Aclippy::borrowed-box",
  "-Aclippy::too_many_arguments",
  "-Aclippy::unnecessary_cast",
  "-Aclippy::identity_op",
  "-Aclippy::useless_conversion",
  "-Aclippy::unit_arg",
  "-Aclippy::option_map_unit_fn",
  "-Aclippy::bind_instead_of_map",
  "-Aclippy::erasing_op",
  "-Aclippy::eq_op",
  "-Aclippy::while_immutable_condition",
  "-Aclippy::needless_option_as_deref",
  "-Aclippy::derivable_impls",
  "-Aclippy::bool_assert_comparison",
]
